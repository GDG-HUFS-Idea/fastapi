services:
  app:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.13-slim
        WORKDIR /app
        COPY requirements.txt .
        RUN pip install -r requirements.txt
        COPY . .
        ENV PYTHONPATH=/app
        CMD ["python", "app/main.py"]
    ports:
      - 80:80
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy

  pg:
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${PG_PW}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=database
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d database"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 4s

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 4s

volumes:
  pg_data:
  redis_data:
